console.log("Hello World");
console.log("%cHello", "color : green; font-size : x-large");

var model=promt("Lütfen model giriniz: ");

alert("Merhaba, dünya!");

var cevap = confirm("Emin misiniz?");
if (cevap == true) {
    alert("Onaylandı!");
} else {
    alert("Reddedildi!");
}


//degiskenler

var myName = "JavaScrit";
//degisebilir glabaldir

let yas = "degisir";
//degeri degisebilir

const deger = "degismez";
//degeri degismez

console.log(myName);

var personel = ["Ali", "Ece", "Can"];

console.log(personel); //(3) ['Ali', 'Ece', 'Can']

//Data type

console.log(typeof deger); //string

//string, number, boolean, null, undefined

var araba = null;
console.log(typeof araba); //object olarak gelir.

var otomatikMi = true;

console.log(myName + "in " + deger + " kurallari vardir."); //JavaScritin degismez kurallari vardir.

var mesaj = myName + "in " + deger + " kurallari vardir."; //JavaScritin degismez kurallari vardir.
console.log(mesaj);

//Backtick: Stringleri dinamik birlestirmek icin kullanilir.

var mesaj2 = `${myName}in ${deger} kurallari vardir`;
console.log(`${myName}in ${deger} kurallari vardir`); //direkt de yazdirabiliriz
console.log(mesaj2); //atama yaparak da yazdirabiliriz.

//fonksiyonlar
//parametresiz
function muhtesem() {
  console.log("hi!!");
}

muhtesem();

//parametreli
function muhtesem2(isim) {
  console.log("hi " + isim);
}

muhtesem2("Ali");

function insan(isim, yas) {
  console.log(isim + " " + yas); //istersek direkt yazdiririz
}

insan("Aziz", 42);

function insan2(isim, yas) {
  //istersek return kullaniriz
  return isim + " " + yas;
}

console.log(insan2("Aziz", 42));

function insan3(isim, yas) {
  //istersek de BACKTICK ile yazabiliriz.
  return `${isim} ${yas}`;
}

console.log(insan3("Kadir", 16));

const sayininKaresi = function kareAlma(sayi) {
  return sayi * sayi;
};

console.log(sayininKaresi(8));
//kareAlma(7); seklinde kullanilamiyor cünkü scop ta kalmis oluyor.

//#############################################################

//Anonymous(isimsiz) Fonksiyon

//eger bir fonksiyonun ismi yoksa onu bir degiskene atayabiliriz.

var sonuc = function (a, b, c) {
  return a + b + c;
};

console.log(sonuc(2, 6, 5));

//############################################################

//Arrow fonksiyon

//function kelimesi ve fonksiyonun adi silinir
//parametre ve boy arasina => isaretini koyuyoruz

var arrow = (a) => a + 100; //eger tek parametre varsa parantezi kaldirabiliriz.

console.log(arrow(8));

var arrow2 = (a, b) => a + b + 10;

console.log(arrow2(8, 2));

//prizmanin hacmini bulalim

var prizma = function (boy, derinlik, yukseklik) {
  return boy * derinlik * yukseklik;
};
console.log(prizma(1, 5, 3));

var prizma2 = (a, b, c) => a * b * c;

console.log(prizma2(3, 2, 4));

//*************************************** */

//Object: data kaydetmek icin kullanilir
//{} le olusturulur

var ad = "Ali";
var soyad = "Can";
var yasi = 25;
var kisiBilgisi = `${ad} ${soyad} ${yasi}`;

console.log(kisiBilgisi);

//kisi objesi olusturalim
var kisi = {
  ad: "Kadir",
  soyad: "Ayazli", // Aralardaki virgulleri Unutma!!!
  yasi: 28,
  calisiyorMu: true,
};

//bilgileri cagirma ve turunu ogrenme

console.log(typeof kisi); //object
console.log(kisi); //{ad: 'Kadir', soyad: 'Ayazli', yasi: 28, calisiyorMu: true}

console.log(kisi.soyad); //Ayazli
console.log(typeof kisi.soyad); //string

//diger yol

console.log(kisi["ad"]); //Kadir

//#################

//Nested object

var calisan = {
  ad: "Ayse",
  soyad: "Cakir",
  yas: 23,
  calisiyorMu: true,
  adres: {
    sehir: "Ankara",
    cadde: "Halicilar Cd.",
    sokak: "256. sk.",
    no: 68,
  },
  hobiler: ["yüzmek", "bisiklet sürmek", "dagcilik"], //array olarak yazdik
};

console.log(calisan); //{ad: 'Ayse', soyad: 'Cakir', yas: 23, calisiyorMu: true, adres: {…},…}
console.log(calisan.yas); //23
console.log(calisan.adres); //{sehir: 'Ankara', cadde: 'Halicilar Cd.', sokak: '256. sk.', no: 68}
console.log(calisan.hobiler); //3) ['yüzmek', 'bisiklet sürmek', 'dagcilik']
console.log(calisan.hobiler[2]); //dagcilik

//************************** */

//Arrays

var arkadaslarim = ["Efe", "Can", "Ali"];
console.log(arkadaslarim); //(3) ['Efe', 'Can', 'Ali']

//diger yöntem

var arkadaslarim2 = new Array("banu", "hafsa", "seckin");
console.log(arkadaslarim2); //(3) ['banu', 'hafsa', 'seckin']
console.log(arkadaslarim2[1]); //hafsa

//eger bir ismi degistirmek istersek

arkadaslarim2[1] = "kadriye";
console.log(arkadaslarim2); //(3) ['banu', 'kadriye', 'seckin']

//yeni deger eklemek istersek

arkadaslarim2[4] = "rukiye";
console.log(arkadaslarim2); //(5) ['banu', 'kadriye', 'seckin', empty, 'rukiye']

//Array in tipi objedir

console.log(typeof arkadaslarim2); //object

//*********Array komutlari ******* */

//push array in sonuna veri ekler

arkadaslarim2.push("cemile");
console.log(arkadaslarim2); //(6) ['banu', 'kadriye', 'seckin', empty, 'rukiye', 'cemile']

//unschift array in basina ekler

arkadaslarim2.unshift("rabia");
console.log(arkadaslarim2); //(7) ['rabia', 'banu', 'kadriye', 'seckin', empty, 'rukiye', 'cemile']

//pop son veriyi siler

arkadaslarim2.pop();
console.log(arkadaslarim2); //(6) ['rabia', 'banu', 'kadriye', 'seckin', empty, 'rukiye']

//shift ilk datayi siler

arkadaslarim2.shift();
console.log(arkadaslarim2); //(5) ['banu', 'kadriye', 'seckin', empty, 'rukiye']

//yen bir Array tanimlayalim
var yaslar = [20, 10, 23, 13, 46, 34];
console.log(yaslar); //(6) [20, 10, 23, 13, 46, 34]

//indexof(item,from) latIndexOf(item)

console.log(yaslar.indexOf(13)); //3

// ayni yas ekleyelim
yaslar.push(13, 13, 20);
console.log(yaslar); //(9)[20, 10, 23, 13, 46, 34, 13, 13, 20]

console.log(yaslar.lastIndexOf(13)); //7
//son indexi getirir

//return -1 eslesme yok manasina gelir

//includes bir elemanin olup olmadigini true veya false olarak getirir.

console.log(yaslar.includes(13)); //true
console.log(yaslar.includes(13, 8)); //false : belirtilen indexten sonra olmadigini bildirir.

//splice: ekleme silme degistirme

const arr = [1, 2, 3, 4];

// 1. Örnekte: başlangıç indeksi 1 olan diziden 2 öğe çıkarıyoruz (2, 3).
arr.splice(1, 2); // arr şimdi [1, 4] şeklindedir.

// 2. Örnekte: başlangıç indeksi 1 olan dizinin içine 2. ve 3. indekslere 99 ve 100 değerlerini ekliyoruz.
arr.splice(1, 0, 99, 100); // arr şimdi [1, 99, 100, 4] şeklindedir.

// 3. Örnekte: başlangıç indeksi 2 olan dizinin 1. öğesini 99 ile değiştiriyoruz.
arr.splice(2, 1, 99); // arr şimdi [1, 99, 100, 4] şeklindedir.

//Bu metodun kullanımı splice(startIndex, deleteCount, item1, item2, ...) şeklindedir.
//İlk parametre, öğelerin eklenip çıkarılacağı dizinin başlangıç indeksini belirtir.
//İkinci parametre, kaç öğenin silineceğini belirtir.
//Eğer bu parametre 0 ise hiçbir öğe silinmez ve sadece ekleme yapılır.
//Eğer bu parametre belirtilmezse, başlangıç indeksinden sonraki tüm öğeler silinir.

//Üçüncü parametre ve sonraki parametreler, eklemek istediğiniz öğelerdir.
//Bu parametreler opsiyoneldir, yani eklemek istemediğiniz öğeleri belirtmek zorunda değilsiniz.

console.log(arr); //(4)[1, 99, 99, 4]
arr.splice(-2); //sondan iki tanesini siler
console.log(arr); //(2) [1, 99]

//slice(startIndex-dahil,endIndex-haric)

var aylar = ["ocak", "subat", "mart", "nisan", "mayis"];

console.log(aylar); //(5)['ocak', 'subat', 'mart', 'nisan', 'mayis']

var secilenAylar = aylar.slice(2); //arrayin icerisinden alir ama array a zarar vermez.
console.log(secilenAylar); //(3) ['mart', 'nisan', 'mayis']

console.log(aylar.slice(2, 4)); //(2)['mart', 'nisan']

//-3 yazarsak son 3 indexi getirir.
//eger parantez icini bos birakirsak dizinin tamamini kopyalar.

//concat:arraylari birlestirir.

var dizi1 = [1, 3, 5, 7, 9];
var dizi2 = [0, 2, 4, 6, 8];
console.log(dizi1.concat(dizi2)); //(10) [1, 3, 5, 7, 9, 0, 2, 4, 6, 8]

//reverse:ters cevirve

console.log(dizi1.reverse()); //(5) [9, 7, 5, 3, 1]

//sort sirala

console.log(dizi1.concat(dizi2).sort()); //(10) [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

//büyükten kucuge

console.log(dizi1.concat(dizi2).sort().reverse()); //(10) [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]

//********************************************** */

//loops

//for loop

for (let i = 0; i <= 5; i++) {
  console.log(i);
}

//while loop

let i = 0;
while (i < 5) {
  console.log(i);
  i++;
}

//Do While loop

let x = 0;
do {
  console.log(x);
  x++;
} while (x < 5);

//örnegin 1 ile 10 arasindaki bir sayiyi tahmin etme programi yazali:

let randomNumber = Math.floor(Math.random() * 5) + 1; // 1 ile 5 arasında rastgele bir sayı oluşturulur
let guess;
console.log(randomNumber); // tahmin edilen sayi burada yazilir.

//sonrasini her defasinda rahatsiz etmesin diye yorum satirina aldik.
//do {
//  guess = prompt("1 ile 10 arasinda bir sayi tahmin edin:");
//} while (parseInt(guess) !== randomNumber);

//alert("Tebrikler, doğru sayiyi buldunuz!");

// for...of loop

const meyve = ["apple", "banana", "orange"];
for (let item of meyve) {
  console.log(item);
}

console.log(typeof meyve); //object  :bir arrayi yazdirdik !Array de bir obje dir.

//for...in loop

const person = { isim: "John", yas: 30, sehir: "New York" };
for (let a in person) {
  console.log(a + ": " + person[a]);
}

//isim: John
//yas: 30
//sehir: New York
//seklinde consol da yazildi

console.log(typeof person); //object  :bir objeyi yazdirdik

//Eger birden fazla kisi bilgisi varsa:

let people = [
  {
    name: "Ahmet",
    age: 25,
    city: "Ankara",
    occupation: "Engineer",
  },
  {
    name: "Ayşe",
    age: 30,
    city: "Istanbul",
    occupation: "Teacher",
  },
  {
    name: "Mehmet",
    age: 45,
    city: "Izmir",
    occupation: "Doctor",
  },
];

for (let i = 0; i < people.length; i++) {
  console.log("Person " + (i + 1) + ":");
  for (let prop in people[i]) {
    console.log(prop + " = " + people[i][prop]);
  }
  console.log("");
}

//Person 1:
//name = Ahmet
//age = 25
//city = Ankara
//occupation = Engineer
//seklinde hepsini ayri ayri yazdirdi

for (let i = 0; i < people.length; i++) {
  console.log(people[i]); //{name: 'Ahmet', age: 25, city: 'Ankara', occupation: 'Engineer'}
}

//console.log(people[i].age) ile sadece yasini yazdirabiliriz.

for (let a of people) {
  console.log(a); //{name: 'Ahmet', age: 25, city: 'Ankara', occupation: 'Engineer'}
}

//console.log(a.age) ile sadece yasini yazdirabiliriz.

//for each loop

let myArray = [1, 2, 3, 4, 5];

myArray.forEach(function (element) {
  console.log(element); //alt alta 1,2,3,4,5 yazildi
});

//burda arrow function daha fazla tercih edilir.

myArray.forEach((a) => {
  console.log(a);
});

//***************************************************************** */

//Map 

//bir diziyi isleme sokarak yeni bir dizi olusturma isine yarar.

var array1=[2,4,6,8,10]
console.log(array1) //(5)[2, 4, 6, 8, 10]

function ikiIleCarp(x){
  return x*2
}


var array2= array1.map(ikiIleCarp)
console.log(array2) //(5) [4, 8, 12, 16, 20]

//***************************************************************** */

//Filter

//Bir dizideki elemanlari filitreleme islevi görür

const originalArray = [1, 2, 3, 4, 5];

const evenArray = originalArray.filter((number) => {
  return number % 2 === 0;  //3 tane koyulmasinin sebebi ayni zamanda data türünü de kontrol etmesi icindir.
  //5=="5" true iken 5==="5" false döndürecektir.
});

console.log(evenArray); // [2, 4] seklinde 2 ye bölünebilen sayilari getirdi

//baska bir örnek:

const students = [
  { name: 'John', age: 20 },
  { name: 'Jane', age: 22 },
  { name: 'Bob', age: 18 },
  { name: 'Alice', age: 25 }
];

const adults = students.filter((student) => {
  return student.age > 20;
});

console.log(adults); 
// {name: 'Jane', age: 22}
// {name: 'Alice', age: 25}


